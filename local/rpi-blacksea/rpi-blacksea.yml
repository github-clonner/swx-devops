version: "2.1"

x-logging:
  &default-logging
  options:
    max-size: '12m'
    max-file: '5'
  driver: json-file

networks:
  default:
    driver: bridge

volumes:
  traefik-ssl:
    driver: local
  lirc-etc:
    driver: local
  clockwerx-www:
    driver: local

services:

  traefik:
    extends:
      file: docker-traefik/docker-compose.yml
      service: traefik
    restart: always
    ports:
      - 80:80
      - 443:443
    networks:
      - default
    environment:
      REST_PORT: "7080"
      HTTP_PORT: "80"
      HTTPS_PORT: "443"
      EMAIL: "devops@sofwerx.org"
      DNS_DOMAIN: ${DNS_DOMAIN}
#      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
#      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
#      AWS_HOSTED_ZONE_ID: ${AWS_HOSTED_ZONE_ID}
#      AWS_REGION: ${AWS_REGION}
    logging: *default-logging
    labels:
      - "traefik.enable=true"
      - "traefik.backend=traefik"
      - "traefik.port=7080"
      - "traefik.frontend.rule=Host:traefik.${DNS_DOMAIN}"
      - "traefik.frontend.passHostHeader=true"
      - "traefik.frontend.entryPoints=http,https"

  lirc:
    extends:
      file: docker-lirc/docker-compose.yml
      service: lirc
    restart: always
    logging: *default-logging
    networks:
      - default
    ports:
      - 8765:8765
    volumes:
      - lirc-etc:/etc
    environment:
      DNS_DOMAIN: ${DNS_DOMAIN}
    labels:
      - "traefik.enable=false"

  clockwerx:
    extends:
      file: clockwerx2/docker-compose.yml
      service: clockwerx
    logging: *default-logging
    networks:
      - default
    volumes:
      - clockwerx-www:/www
    environment:
      DNS_DOMAIN: ${DNS_DOMAIN}
    labels:
      - "traefik.enable=true"
      - "traefik.backend=clockwerx"
      - "traefik.port=8088"
      - "traefik.frontend.rule=Host:clockwerx.${DNS_DOMAIN}"
      - "traefik.frontend.passHostHeader=false"
      - "traefik.frontend.entryPoints=http,https"



